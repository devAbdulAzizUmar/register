{"version":3,"sources":["hooks/use-http.js","data/specialities.js","components/Input.js","components/Center.js","components/RegistrationForm.js","App.js","reportWebVitals.js","index.js","components/RegistrationForm.module.css","components/Center.module.css"],"names":["useHttp","useState","isLoading","setIsLoading","error","setError","responseBody","statusCode","sendRequest","endpoint","a","method","params","body","baseUrl","URL","console","log","search","URLSearchParams","headers","fetch","JSON","stringify","response","message","specialities","en","ar","icon","isSelected","Input","props","ref","fullWidth","inputRef","useRef","variant","notFullWidth","blur","current","focus","setValue","newValue","value","getValue","useImperativeHandle","unfocus","TextField","inputProps","onClick","InputProps","startAdornment","InputAdornment","position","endAdornment","suffix","React","forwardRef","Center","className","classes","center","children","specialitiesEnglish","specialitiesArabic","selectedLanguages","allLanguages","language","education","institutionName","course","year","experience","hospitalName","years","iconColor","RegistrationForm","isRequestingOTP","requestOTPError","requestOTP","requestOTPResponseBody","isSubmittingOTP","submitOTP","loginResponseData","gender","setGender","gradeLevel","setGradeLevel","phoneNumber","setPhoneNumber","passwordState","setPasswordState","confirmPasswordState","setConfirmPasswordState","invalidDiscountPercentage","setInvalidDiscountPercentage","password","confirmPassword","passwordsMatch","passwords","setPasswords","discountPercentageDisabled","setDiscountPercentageDisabled","map","spaciality","selectedSpecialities","setSelectedSpecialities","languages","setLanguages","attempt","setAttempt","nationalIdHasError","setNationalIdHasError","phoneNumberHasError","setPhoneNumberHasError","isVerifying","setIsVerifying","enteredOTP","setEnteredOTP","hasVerified","setHasVerified","wrongOTP","setWrongOTP","discountAmountRef","discountPercentageRef","feeRef","nationalIdRef","phoneNumberRef","otpRef","requestOTPHandler","nationalId","length","numberInputRef","replace","mobileNumber","recoverPassword","src","status","prevAttempt","json","formSubmitHandler","event","preventDefault","updateDiscountAmount","discountPercentage","discountAmount","validatePassword","pass","confirmPass","submitOTPhandler","focusNextInput","otp","Fragment","onSubmit","form","row","required","type","placeholder","label","AccountCircle","sx","color","blue","FormControl","FormLabel","RadioGroup","onChange","target","name","FormControlLabel","control","Radio","disabled","helperText","style","width","height","faIdCard","Divider","phoneInput","display","justifyContent","alignItems","flex","country","onFocus","isValid","number","onlyCountries","countryCodeEditable","enableSearch","inputStyle","verificationContainer","CircularProgress","Icon","faCheck","faHourglassHalf","Button","endIcon","faCheckCircle","Typography","border","borderRadius","numInputs","separator","EmailRounded","LocalHospitalRounded","prevState","faKey","IconButton","faEye","faEyeSlash","faBirthdayCake","faHashtag","textAlign","fontSize","grey","Grid","container","spacing","speciality","index","item","xs","Checkbox","checked","prevSpecialities","push","filter","specialityEnglish","specialityArabic","faMoneyBill","max","faPercent","prevLanguages","element","educationContainer","faDollarSign","faCreditCard","faFlag","city","faCity","minHeight","button","theme","createTheme","palette","primary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97e2fbd1.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport isTesting from \"../constants/constants\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [responseBody, setResponseBody] = useState();\n  const [statusCode, setStatusCode] = useState();\n\n  const sendRequest = async (endpoint, method = \"GET\", params, body) => {\n    const baseUrl = new URL(\n      isTesting\n        ? \"https://askurdr-test-api.cappstech.com/api\" + endpoint\n        : \"https://askurdr-api.cappstech.com/api\" + endpoint\n    );\n\n    console.log(\"params\", params);\n    console.log(\"body\", body);\n\n    if (params) {\n      baseUrl.search = new URLSearchParams(params);\n    }\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"API-KEY\": \"Wh8EqCgXGnjD3ujAPpLdaW4S\",\n      \"Accept-Encoding\": \"gzip\",\n    };\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(baseUrl, {\n        headers: headers,\n\n        method: method,\n        body: body ? JSON.stringify(body) : null,\n      });\n      setIsLoading(false);\n      return response;\n    } catch (error) {\n      setError(error.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    responseBody,\n    statusCode,\n  };\n};\n\nexport default useHttp;\n","const specialities = [\n  {\n    en: \"Family Medicine\",\n    ar: \"استشاري طب الأسرة طبيب العائلة\",\n    icon: \"assets/icons/family.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Nervous System & Mental Disorders\",\n    ar: \"أمراض الجهاز العصبي والصرع والنفسية\",\n    icon: \"assets/icons/mind.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Cardiovascular System\",\n    ar: \"الجهاز الدوري والقلب والضغط\",\n    icon: \"assets/icons/heart.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Musculoskeletal System and Joints\",\n    ar: \"المفاصل و العظام (والروماتيزم)\",\n    icon: \"assets/icons/arm.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Endocrinology & Diabetes\",\n    ar: \"جهاز الغدد الصم والسكري\",\n    icon: \"assets/icons/endocrinology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Hematology & Oncology\",\n    ar: \"أمراض الدم والأورام\",\n    icon: \"assets/icons/oncology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Gastro - Intestinal\",\n    ar: \"الجهاز الهضمي ,والقولون والمستقيم\",\n    icon: \"assets/icons/gastro.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Respiratory & Sleep Disorders\",\n    ar: \"أمراض الجهاز التنفسي واضطرابات النوم\",\n    icon: \"assets/icons/respiratory.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Kidney & Urinary System\",\n    ar: \"أمراض  جهاز المسالك البولية والكلى\",\n    icon: \"assets/icons/kidney.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Obstetrics Gynecology & Infertility\",\n    ar: \"طب النساء والولاده وعلاج العقم\",\n    icon: \"assets/icons/obstetrics.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Plastic Surgery & Dermatology\",\n    ar: \"الجلدية و التجميل والحساسية\",\n    icon: \"assets/icons/dermatology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Opthalmology\",\n    ar: \"استشاري طب العيون\",\n    icon: \"assets/icons/eye.png\",\n    isSelected: false,\n  },\n  {\n    en: \"ENT\",\n    ar: \"أنف وأذن وحنجرة\",\n    icon: \"assets/icons/ent.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Psychiatry\",\n    ar: \"الطب النفسي\",\n    icon: \"assets/icons/psychiatry.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Pediatrics\",\n    ar: \"طب الأطفال\",\n    icon: \"assets/icons/pediatrics.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Orthopedic Surgery\",\n    ar: \"جراحة العظام\",\n    icon: \"assets/icons/orthopedic.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Urology Surgery\",\n    ar: \"جراحة المسالك البوليه\",\n    icon: \"assets/icons/urology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"NeuroSurgery & Spine\",\n    ar: \"جراحة المخ والأعصاب والعمود الفقري\",\n    icon: \"assets/icons/neuroSurgery.png\",\n    isSelected: false,\n  },\n  {\n    en: \"General Surgery\",\n    ar: \"جراحة عامه\",\n    icon: \"assets/icons/generalSurgery.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Dental & Dental Procedures\",\n    ar: \"طب الأسنان وجراحة الفك\",\n    icon: \"assets/icons/dental.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Infectious Diseases\",\n    ar: \"الأمراض المعديه\",\n    icon: \"assets/icons/infections.png\",\n    isSelected: false,\n  },\n];\n\nexport default specialities;\n","import { TextField, InputAdornment } from \"@material-ui/core\";\nimport React, { useRef, useImperativeHandle } from \"react\";\n\nfunction Input(props, ref) {\n  let fullWidth;\n  const inputRef = useRef();\n\n  let variant = \"outlined\";\n\n  if (props.notFullWidth) {\n    fullWidth = false;\n  } else {\n    fullWidth = true;\n  }\n\n  if (props.variant) {\n    variant = props.variant;\n  }\n\n  const blur = () => {\n    inputRef.current.blur();\n  };\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  const setValue = (newValue) => {\n    inputRef.current.value = newValue;\n  };\n\n  const getValue = () => {\n    return inputRef.current.value;\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      unfocus: blur,\n      focus: focus,\n      setValue: setValue,\n      getValue: getValue,\n    };\n  });\n\n  return (\n    <TextField\n      inputRef={inputRef}\n      inputProps={{\n        ...props.inputProps,\n      }}\n      onClick={props.onClick}\n      fullWidth={fullWidth}\n      InputProps={{\n        inputProps: props.inputProps,\n        startAdornment: props.icon && (\n          <InputAdornment position=\"start\">{props.icon}</InputAdornment>\n        ),\n\n        endAdornment: props.suffix && (\n          <InputAdornment position=\"end\">{props.suffix}</InputAdornment>\n        ),\n      }}\n      variant={variant}\n      {...props}\n    ></TextField>\n  );\n}\n\nexport default React.forwardRef(Input);\n","import React from \"react\";\nimport classes from \"./Center.module.css\";\n\nfunction Center(props) {\n  return <div className={classes.center}>{props.children}</div>;\n}\n\nexport default Center;\n","import React, { useState, useRef } from \"react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport useHttp from \"../hooks/use-http\";\nimport OtpInput from \"react-otp-input\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  faIdCard,\n  faKey,\n  faEye,\n  faEyeSlash,\n  faBirthdayCake,\n  faHashtag,\n  faMoneyBill,\n  faPercent,\n  faDollarSign,\n  faCreditCard,\n  faCity,\n  faFlag,\n  faCheckCircle,\n  faCheck,\n  faHourglassHalf,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"react-phone-input-2/lib/material.css\";\nimport specialities from \"../data/specialities\";\n\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Grid,\n  Checkbox,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport classes from \"./RegistrationForm.module.css\";\nimport Input from \"./Input\";\nimport Center from \"./Center\";\nimport {\n  AccountCircle,\n  EmailRounded,\n  LocalHospitalRounded,\n} from \"@mui/icons-material\";\nimport { Divider, Icon, IconButton, Typography } from \"@mui/material\";\n\nimport { blue, grey } from \"@mui/material/colors\";\n\nvar specialitiesEnglish = [];\nvar specialitiesArabic = [];\nvar selectedLanguages = [];\n\nconst allLanguages = [\n  { language: \"English\", isSelected: false },\n  { language: \"Arabic\", isSelected: false },\n];\n\nconst education = {\n  institutionName: \"\",\n  course: \"\",\n  year: \"\",\n};\n\nconst experience = {\n  hospitalName: \"\",\n  position: \"\",\n  years: \"\",\n};\n\nconst iconColor = \"#42a5f5\";\nconst iconErrorColor = \"#f44336\";\n\nfunction RegistrationForm() {\n  const {\n    isLoading: isRequestingOTP,\n    error: requestOTPError,\n    sendRequest: requestOTP,\n    responseBody: requestOTPResponseBody,\n    statusCode: requestOTPStatusCode,\n  } = useHttp();\n\n  const {\n    isLoading: isSubmittingOTP,\n    error: submitOTPError,\n    sendRequest: submitOTP,\n    responseBody: submitOTPResponseBody,\n    statusCode: submitOTPStatusCode,\n  } = useHttp();\n\n  const {\n    isLoading: isLoggingIn,\n    // error: errorLoggingIn,\n    sendRequest: login,\n    responseBody: loginResponseData,\n    // statusCode: loginStatusCode,\n  } = useHttp();\n\n  const [gender, setGender] = useState(\"MALE\");\n  const [gradeLevel, setGradeLevel] = useState(\"CONSULTANT\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(\"password\");\n  const [confirmPasswordState, setConfirmPasswordState] = useState(\"password\");\n  const [invalidDiscountPercentage, setInvalidDiscountPercentage] =\n    useState(false);\n\n  const [passwords, setPasswords] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    passwordsMatch: true,\n  });\n  const [discountPercentageDisabled, setDiscountPercentageDisabled] =\n    useState(true);\n  const [selectedSpecialities, setSelectedSpecialities] = useState(\n    specialities.map((spaciality) => {\n      return {\n        en: spaciality.en,\n        ar: spaciality.ar,\n        icon: spaciality.icon,\n        isSelected: spaciality.isSelected,\n      };\n    })\n  );\n\n  const [languages, setLanguages] = useState([\n    { language: \"English\", isSelected: false },\n    { language: \"Arabic\", isSelected: false },\n  ]);\n\n  const [attempt, setAttempt] = useState(1);\n  const [nationalIdHasError, setNationalIdHasError] = useState(false);\n  const [phoneNumberHasError, setPhoneNumberHasError] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [enteredOTP, setEnteredOTP] = useState(\"\");\n  const [hasVerified, setHasVerified] = useState(false);\n  const [wrongOTP, setWrongOTP] = useState(false);\n\n  const discountAmountRef = useRef();\n  const discountPercentageRef = useRef();\n  const feeRef = useRef();\n  const nationalIdRef = useRef();\n  const phoneNumberRef = useRef();\n  const otpRef = useRef();\n\n  const requestOTPHandler = async () => {\n    const nationalId = nationalIdRef.current.getValue();\n    setNationalIdHasError(false);\n    setPhoneNumberHasError(false);\n\n    if (nationalId.length < 10) {\n      setNationalIdHasError(true);\n      nationalIdRef.current.focus();\n      return;\n    }\n\n    var phoneNumber = phoneNumberRef.current.numberInputRef.value;\n    phoneNumber = phoneNumber.replace(/\\s+/g, \"\");\n    console.log(phoneNumber.length);\n\n    if (phoneNumber.length < 8) {\n      setPhoneNumberHasError(true);\n      phoneNumberRef.current.numberInputRef.focus();\n      return;\n    }\n\n    try {\n      const response = await requestOTP(\n        \"/auth/sendOTP\",\n        \"POST\",\n        {\n          mobileNumber: phoneNumber,\n          attempt: attempt,\n          recoverPassword: false,\n          nationalId: nationalId,\n          src: \"DOCTORS_APP\",\n        },\n        null\n      );\n\n      if (response.status === 200) {\n        setAttempt((prevAttempt) => {\n          return prevAttempt + 1;\n        });\n        setIsVerifying(true);\n      }\n      const responseJson = await response.json();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n  };\n  const togglePasswordObscuredHandler = (event) => {\n    if (passwordState === \"password\") {\n      setPasswordState(\"text\");\n    } else {\n      setPasswordState(\"password\");\n    }\n  };\n  const toggleConfirmPasswordObscuredHandler = (event) => {\n    if (confirmPasswordState === \"password\") {\n      setConfirmPasswordState(\"text\");\n    } else {\n      setConfirmPasswordState(\"password\");\n    }\n  };\n\n  const onDiscountPercentageChange = (event) => {\n    if (+event.target.value > 99 || +event.target.value < 0) {\n      setInvalidDiscountPercentage(true);\n      discountPercentageRef.current.setValue(\"0\");\n    } else {\n      if (invalidDiscountPercentage) {\n        setInvalidDiscountPercentage(false);\n      }\n    }\n    updateDiscountAmount();\n  };\n\n  const updateDiscountAmount = () => {\n    const discountPercentage = discountPercentageRef.current.getValue();\n\n    const discountAmount =\n      feeRef.current.getValue() * (discountPercentage / 100);\n    discountAmountRef.current.setValue(discountAmount);\n  };\n\n  const onFeeChange = (event) => {\n    if (event.target.value === \"\") {\n      if (!discountPercentageDisabled) {\n        setDiscountPercentageDisabled(true);\n        discountPercentageRef.current.setValue(\"\");\n      }\n    } else {\n      if (discountPercentageDisabled) {\n        setDiscountPercentageDisabled(false);\n      }\n    }\n\n    updateDiscountAmount();\n  };\n\n  const validatePassword = (pass, confirmPass) => {\n    console.log(pass === confirmPass);\n    return pass === confirmPass;\n  };\n\n  const submitOTPhandler = async () => {\n    setWrongOTP(false);\n    if (enteredOTP.length < 4) {\n      otpRef.current.focusNextInput();\n      setWrongOTP(true);\n      return;\n    }\n\n    const response = await submitOTP(\n      \"/auth/verifyOTP\",\n      \"POST\",\n      {\n        mobileNumber: phoneNumber,\n        otp: enteredOTP,\n        attempt: attempt - 1,\n      },\n      null\n    );\n\n    if (response.status === 200) {\n      setHasVerified(true);\n      setWrongOTP(false);\n      setIsVerifying(false);\n    } else {\n      setWrongOTP(true);\n    }\n\n    console.log(response);\n    console.log(response.status);\n  };\n\n  return (\n    <React.Fragment>\n      <Center>\n        <form onSubmit={formSubmitHandler} className={classes.form}>\n          <div className={classes.row}>\n            <Input\n              required\n              fullWidth\n              type=\"text\"\n              placeholder=\"Enter your first name\"\n              label=\"First Name\"\n              icon={<AccountCircle sx={{ color: blue[400] }} />}\n            ></Input>\n            <Input\n              required\n              type=\"text\"\n              label=\"Last Name\"\n              placeholder=\"Enter your last name\"\n              icon={<AccountCircle sx={{ color: blue[400] }} />}\n            ></Input>\n          </div>\n          <FormControl>\n            <FormLabel>Gender</FormLabel>\n            <RadioGroup\n              row\n              value={gender}\n              onChange={(event) => {\n                setGender(event.target.value);\n              }}\n              name=\"gender\"\n            >\n              <FormControlLabel\n                label=\"Male\"\n                value=\"MALE\"\n                control={<Radio color=\"primary\" />}\n              />\n              <FormControlLabel\n                label=\"Female\"\n                value=\"FEMALE\"\n                control={<Radio color=\"primary\" />}\n              />\n            </RadioGroup>\n          </FormControl>\n          <Input\n            type=\"number\"\n            error={nationalIdHasError}\n            disabled={isVerifying || hasVerified}\n            helperText={\n              nationalIdHasError\n                ? \"National ID cannot be less than 10 digits\"\n                : \"\"\n            }\n            onChange={(event) => {\n              setNationalIdHasError(false);\n              if (event.target.value.length < 10) {\n                setNationalIdHasError(true);\n              }\n            }}\n            required\n            label=\"National ID/Iqama\"\n            placeholder=\"Enter your national ID number\"\n            ref={nationalIdRef}\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faIdCard}\n                color={iconColor}\n              />\n            }\n          ></Input>\n          <Divider />\n\n          <div className={classes.phoneInput}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flex: 3,\n              }}\n            >\n              <PhoneInput\n                country={\"sa\"}\n                onFocus={() => {}}\n                inputProps={{\n                  required: true,\n                }}\n                isValid={!phoneNumberHasError}\n                error={true}\n                ref={phoneNumberRef}\n                disabled={isVerifying}\n                placeholder=\"Enter phone number\"\n                value={phoneNumber}\n                onChange={(number) => {\n                  setPhoneNumber(\"+\" + number);\n                  console.log(phoneNumberRef.current.numberInputRef.value);\n                }}\n                onlyCountries={[\"ae\", \"pk\", \"sa\", \"kw\", \"bh\", \"gb\", \"us\"]}\n                countryCodeEditable={false}\n                enableSearch={true}\n                inputStyle={{\n                  width: \"100%\",\n                  height: \"55px\",\n                }}\n              />\n            </div>\n\n            <div className={classes.verificationContainer}>\n              {\" \"}\n              {isRequestingOTP ? (\n                <CircularProgress />\n              ) : hasVerified ? (\n                <Icon color=\"success\">\n                  <FontAwesomeIcon icon={faCheck} />\n                </Icon>\n              ) : isVerifying ? (\n                <Icon>\n                  <FontAwesomeIcon icon={faHourglassHalf} />\n                </Icon>\n              ) : (\n                <Button\n                  fullWidth\n                  onClick={requestOTPHandler}\n                  color=\"primary\"\n                  type=\"button\"\n                  endIcon={<FontAwesomeIcon icon={faCheckCircle} />}\n                >\n                  Verify\n                </Button>\n              )}\n            </div>\n          </div>\n          {!hasVerified && !isVerifying && (\n            <Typography>Must be verfied using OTP</Typography>\n          )}\n          {isVerifying && (\n            <div className={classes.row}>\n              {\" \"}\n              <OtpInput\n                ref={otpRef}\n                value={enteredOTP}\n                isValid={false}\n                inputStyle={{\n                  height: \"50px\",\n                  width: \"50px\",\n                  border: wrongOTP ? \"1px solid red\" : \"1px solid grey\",\n                  borderRadius: \"5px\",\n                }}\n                onChange={(value) => {\n                  // console.log();\n                  setEnteredOTP(value);\n                }}\n                numInputs={4}\n                separator={<span>-</span>}\n              />\n              {isSubmittingOTP ? (\n                <CircularProgress />\n              ) : (\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={submitOTPhandler}\n                >\n                  Submit OTP\n                </Button>\n              )}\n            </div>\n          )}\n\n          <Divider />\n\n          <Input\n            type=\"email\"\n            label=\"Email\"\n            placeholder=\"Enter your email\"\n            icon={<EmailRounded sx={{ color: blue[400] }} />}\n          ></Input>\n          <Input\n            type=\"text\"\n            label=\"Hospital Name\"\n            placeholder=\"Enter the name of your hospital\"\n            icon={<LocalHospitalRounded sx={{ color: blue[400] }} />}\n          ></Input>\n\n          <Input\n            type={passwordState}\n            required\n            onChange={(event) => {\n              setPasswords((prevState) => {\n                return {\n                  ...prevState,\n                  password: event.target.value,\n                  passwordsMatch: validatePassword(\n                    event.target.value,\n                    prevState.confirmPassword\n                  ),\n                };\n              });\n            }}\n            label=\"Password\"\n            placeholder=\"Enter your password\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faKey}\n                color={iconColor}\n              />\n            }\n            suffix={\n              <IconButton onClick={togglePasswordObscuredHandler}>\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={passwordState === \"password\" ? faEye : faEyeSlash}\n                  color={iconColor}\n                  aria-label=\"toggle password visibility\"\n                  label=\"Password\"\n                />\n              </IconButton>\n            }\n          />\n          <Input\n            onChange={(event) => {\n              setPasswords((prevState) => {\n                return {\n                  ...prevState,\n                  confirmPassword: event.target.value,\n                  passwordsMatch: validatePassword(\n                    prevState.password,\n                    event.target.value\n                  ),\n                };\n              });\n            }}\n            error={!passwords.passwordsMatch}\n            helperText={\n              !passwords.passwordsMatch ? \"Passwords don't match\" : \"\"\n            }\n            type={confirmPasswordState}\n            required\n            label=\"Confirm Password\"\n            placeholder=\"Confirm your password\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faKey}\n                color={iconColor}\n              />\n            }\n            suffix={\n              <IconButton onClick={toggleConfirmPasswordObscuredHandler}>\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={\n                    confirmPasswordState === \"password\" ? faEye : faEyeSlash\n                  }\n                  color={iconColor}\n                />\n              </IconButton>\n            }\n          />\n\n          <Input\n            type=\"date\"\n            required\n            label=\"Date of birth\"\n            onChange={(event) => {\n              console.log(event.target.value);\n            }}\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faBirthdayCake}\n                color={iconColor}\n              />\n            }\n          />\n\n          <Input\n            type=\"text\"\n            required\n            label=\"SCFHS Registration Number\"\n            placeholder=\"Enter SCFHS Number\"\n            onChange={(event) => {\n              console.log(event.target.value);\n            }}\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faHashtag}\n                color={iconColor}\n              />\n            }\n          />\n\n          <FormControl>\n            <FormLabel>Grade Level</FormLabel>\n            <RadioGroup\n              row\n              value={gradeLevel}\n              onChange={(event) => {\n                setGradeLevel(event.target.value);\n              }}\n              name=\"gradeLevel\"\n            >\n              <FormControlLabel\n                label=\"Consultant\"\n                value=\"CONSULTANT\"\n                control={<Radio color=\"primary\" />}\n              />\n              <FormControlLabel\n                label=\"Specialist\"\n                value=\"SPECIALIST\"\n                control={<Radio color=\"primary\" />}\n              />\n            </RadioGroup>\n          </FormControl>\n          <Divider textAlign=\"left\">\n            <Typography fontSize={16} color={grey[700]}>\n              Select your specialities\n            </Typography>\n          </Divider>\n\n          <Grid container spacing={2}>\n            {specialities.map((speciality, index) => {\n              return (\n                <Grid key={speciality.en} item xs={6}>\n                  <FormControlLabel\n                    label={speciality.en}\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={selectedSpecialities[index].isSelected}\n                        onChange={(event) => {\n                          selectedSpecialities[index].isSelected =\n                            event.target.checked;\n                          setSelectedSpecialities((prevSpecialities) => {\n                            return {\n                              ...prevSpecialities,\n                            };\n                          });\n                          if (event.target.checked) {\n                            specialitiesEnglish.push(\n                              selectedSpecialities[index].en\n                            );\n                            specialitiesArabic.push(\n                              selectedSpecialities[index].ar\n                            );\n                          } else {\n                            specialitiesEnglish = specialitiesEnglish.filter(\n                              (specialityEnglish) =>\n                                specialityEnglish !==\n                                selectedSpecialities[index].en\n                            );\n                            specialitiesArabic = specialitiesArabic.filter(\n                              (specialityArabic) =>\n                                specialityArabic !==\n                                selectedSpecialities[index].ar\n                            );\n                          }\n                        }}\n                      />\n                    }\n                  ></FormControlLabel>\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Fee\n            </Typography>\n          </Divider>\n\n          <Input\n            required\n            ref={feeRef}\n            onChange={onFeeChange}\n            fullWidth\n            type=\"number\"\n            placeholder=\"Enter your fee in Saudi Riyals\"\n            label=\"Fee\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faMoneyBill}\n                color={iconColor}\n              />\n            }\n          ></Input>\n\n          <div className={classes.row}>\n            <Input\n              fullWidth\n              ref={discountPercentageRef}\n              onChange={onDiscountPercentageChange}\n              error={invalidDiscountPercentage}\n              disabled={discountPercentageDisabled}\n              helperText={\n                invalidDiscountPercentage\n                  ? \"Percentage must be from 0 to 99\"\n                  : \"\"\n              }\n              type=\"number\"\n              inputProps={{ max: 99 }}\n              placeholder=\"Discount %\"\n              label=\"Discount\"\n              icon={\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={faPercent}\n                  color={\n                    !invalidDiscountPercentage ? iconColor : iconErrorColor\n                  }\n                />\n              }\n            ></Input>\n            <Input\n              fullWidth\n              type=\"number\"\n              placeholder=\"Discount amount \"\n              disabled\n              ref={discountAmountRef}\n            ></Input>\n          </div>\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Select your languages\n            </Typography>\n          </Divider>\n\n          <Grid container spacing={2}>\n            {allLanguages.map((language, index) => {\n              return (\n                <Grid key={language.language} item xs={6}>\n                  <FormControlLabel\n                    label={language.language}\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={languages[index].isSelected}\n                        onChange={(event) => {\n                          languages[index].isSelected = event.target.checked;\n                          setLanguages((prevLanguages) => {\n                            return {\n                              ...prevLanguages,\n                            };\n                          });\n                          if (event.target.checked) {\n                            selectedLanguages.push(languages[index].language);\n                          } else {\n                            selectedLanguages = selectedLanguages.filter(\n                              (element) => {\n                                return element !== allLanguages[index].language;\n                              }\n                            );\n                          }\n\n                          console.log(selectedLanguages);\n                        }}\n                      />\n                    }\n                  ></FormControlLabel>\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Education Details\n            </Typography>\n          </Divider>\n          <div className={classes.educationContainer}>\n            <Input\n              fullWidth\n              placeholder=\"Institution Name\"\n              variant=\"standard\"\n              onChange={(event) => {\n                education.institutionName = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              placeholder=\"Course\"\n              variant=\"standard\"\n              onChange={(event) => {\n                education.course = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              type=\"number\"\n              placeholder=\"Year\"\n              variant=\"standard\"\n              onChange={(event) => {\n                education.year = event.target.value;\n              }}\n            />\n          </div>\n\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Experience Details\n            </Typography>\n          </Divider>\n          <div className={classes.educationContainer}>\n            <Input\n              fullWidth\n              placeholder=\"Hospital Name\"\n              variant=\"standard\"\n              onChange={(event) => {\n                experience.hospitalName = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              placeholder=\"Position\"\n              variant=\"standard\"\n              onChange={(event) => {\n                experience.position = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              type=\"number\"\n              placeholder=\"Years\"\n              variant=\"standard\"\n              onChange={(event) => {\n                experience.years = event.target.value;\n              }}\n            />\n          </div>\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Payment Details\n            </Typography>\n          </Divider>\n\n          <Input\n            fullWidth\n            placeholder=\"Enter your bank name\"\n            label=\"Bank Name\"\n            required\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faDollarSign}\n                color={iconColor}\n              />\n            }\n          ></Input>\n          <Input\n            fullWidth\n            placeholder=\"Enter your IBAN\"\n            label=\"IBAN\"\n            required\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faCreditCard}\n                color={iconColor}\n              />\n            }\n          ></Input>\n          <Divider textAlign=\"left\"></Divider>\n          <div className={classes.row}>\n            <Input\n              fullWidth\n              className={classes.country}\n              label=\"Country\"\n              disabled\n              required\n              icon={\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={faFlag}\n                  color={iconColor}\n                />\n              }\n            ></Input>{\" \"}\n            <Input\n              fullWidth\n              className={classes.city}\n              placeholder=\"Enter your city\"\n              label=\"City\"\n              required\n              icon={\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={faCity}\n                  color={iconColor}\n                />\n              }\n            ></Input>\n          </div>\n\n          <div\n            style={{\n              minHeight: \"30px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {\" \"}\n            {isRequestingOTP && <CircularProgress />}{\" \"}\n            {requestOTPError && <div>{requestOTPError}</div>}\n            {requestOTPResponseBody && <div>{requestOTPResponseBody}</div>}\n            <div>{JSON.stringify(loginResponseData)}</div>\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              onClick={formSubmitHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </div>\n        </form>\n      </Center>\n    </React.Fragment>\n  );\n}\n\nexport default RegistrationForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { blue } from \"@mui/material/colors\";\n\nconst theme = createTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <RegistrationForm></RegistrationForm>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"overlayscrollbars/css/OverlayScrollbars.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__3X3H2\",\"button\":\"RegistrationForm_button__28eTj\",\"row\":\"RegistrationForm_row__1LYYd\",\"specialitiesInput\":\"RegistrationForm_specialitiesInput__LNNJm\",\"educationContainer\":\"RegistrationForm_educationContainer__3vQjn\",\"country\":\"RegistrationForm_country__JEo-W\",\"city\":\"RegistrationForm_city__3vJt3\",\"phoneInput\":\"RegistrationForm_phoneInput__XkkuB\",\"verificationContainer\":\"RegistrationForm_verificationContainer__28-o-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Center_center__1bYle\"};"],"sourceRoot":""}