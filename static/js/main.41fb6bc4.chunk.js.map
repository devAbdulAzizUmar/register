{"version":3,"sources":["hooks/use-http.js","data/specialities.js","components/Input.js","components/Center.js","components/RegistrationForm.js","App.js","reportWebVitals.js","index.js","components/RegistrationForm.module.css","components/Center.module.css"],"names":["useHttp","useState","isLoading","setIsLoading","error","setError","baseUrl","headers","sendRequest","endPoint","a","body","params","url","URLSearchParams","fetch","method","JSON","stringify","response","console","log","ok","message","specialities","en","ar","icon","isSelected","Input","props","ref","fullWidth","inputRef","useRef","variant","notFullWidth","blur","current","focus","setValue","newValue","value","getValue","useImperativeHandle","unfocus","TextField","inputProps","onClick","InputProps","startAdornment","InputAdornment","position","endAdornment","suffix","React","forwardRef","Center","className","classes","center","children","specialitiesEnglish","specialitiesArabic","selectedLanguages","allLanguages","language","education","institutionName","course","year","experience","hospitalName","years","iconColor","RegistrationForm","isSendingOTP","otpError","sendOtp","gender","setGender","gradeLevel","setGradeLevel","phoneNumber","setPhoneNumber","passwordState","setPasswordState","confirmPasswordState","setConfirmPasswordState","invalidDiscountPercentage","setInvalidDiscountPercentage","password","confirmPassword","passwordsMatch","passwords","setPasswords","discountPercentageDisabled","setDiscountPercentageDisabled","map","spaciality","selectedSpecialities","setSelectedSpecialities","languages","setLanguages","attempt","discountAmountRef","discountPercentageRef","feeRef","updateDiscountAmount","discountPercentage","discountAmount","validatePassword","pass","confirmPass","Fragment","onSubmit","event","preventDefault","form","row","required","type","placeholder","label","AccountCircle","sx","color","blue","FormControl","FormLabel","RadioGroup","onChange","target","name","FormControlLabel","control","Radio","style","display","justifyContent","alignItems","country","number","onlyCountries","countryCodeEditable","enableSearch","inputStyle","width","height","EmailRounded","LocalHospitalRounded","faIdCard","prevState","faKey","IconButton","faEye","faEyeSlash","helperText","faBirthdayCake","faHashtag","Divider","textAlign","Typography","fontSize","grey","Grid","container","spacing","speciality","index","item","xs","Checkbox","checked","prevSpecialities","push","filter","specialityEnglish","specialityArabic","faMoneyBill","disabled","max","faPercent","prevLanguages","element","educationContainer","faDollarSign","faCreditCard","faFlag","city","faCity","CircularProgress","button","Button","mobileNumber","recoverPassword","src","theme","createTheme","palette","primary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.41fb6bc4.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const baseUrl = \"https://askurdr-api.cappstech.com/api/\";\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"API-KEY\": \"Wh8EqCgXGnjD3ujAPpLdaW4S\",\n    \"Accept-Encoding\": \"gzip\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  };\n\n  const sendRequest = async (endPoint, method = \"GET\", body, params) => {\n    setIsLoading(true);\n    setError(null);\n    var url = baseUrl + endPoint;\n    if (params) {\n      url = url + new URLSearchParams(params);\n    }\n\n    try {\n      const response = await fetch(url, {\n        headers: headers,\n        method: \"POST\",\n        body: body ? JSON.stringify(body) : null,\n      });\n\n      console.log(response);\n\n      if (!response.ok) {\n        setError(\"Something went wrong\");\n      }\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message || \"Something went wrong\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n","const specialities = [\n  {\n    en: \"Family Medicine\",\n    ar: \"استشاري طب الأسرة طبيب العائلة\",\n    icon: \"assets/icons/family.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Nervous System & Mental Disorders\",\n    ar: \"أمراض الجهاز العصبي والصرع والنفسية\",\n    icon: \"assets/icons/mind.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Cardiovascular System\",\n    ar: \"الجهاز الدوري والقلب والضغط\",\n    icon: \"assets/icons/heart.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Musculoskeletal System and Joints\",\n    ar: \"المفاصل و العظام (والروماتيزم)\",\n    icon: \"assets/icons/arm.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Endocrinology & Diabetes\",\n    ar: \"جهاز الغدد الصم والسكري\",\n    icon: \"assets/icons/endocrinology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Hematology & Oncology\",\n    ar: \"أمراض الدم والأورام\",\n    icon: \"assets/icons/oncology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Gastro - Intestinal\",\n    ar: \"الجهاز الهضمي ,والقولون والمستقيم\",\n    icon: \"assets/icons/gastro.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Respiratory & Sleep Disorders\",\n    ar: \"أمراض الجهاز التنفسي واضطرابات النوم\",\n    icon: \"assets/icons/respiratory.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Kidney & Urinary System\",\n    ar: \"أمراض  جهاز المسالك البولية والكلى\",\n    icon: \"assets/icons/kidney.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Obstetrics Gynecology & Infertility\",\n    ar: \"طب النساء والولاده وعلاج العقم\",\n    icon: \"assets/icons/obstetrics.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Plastic Surgery & Dermatology\",\n    ar: \"الجلدية و التجميل والحساسية\",\n    icon: \"assets/icons/dermatology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Opthalmology\",\n    ar: \"استشاري طب العيون\",\n    icon: \"assets/icons/eye.png\",\n    isSelected: false,\n  },\n  {\n    en: \"ENT\",\n    ar: \"أنف وأذن وحنجرة\",\n    icon: \"assets/icons/ent.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Psychiatry\",\n    ar: \"الطب النفسي\",\n    icon: \"assets/icons/psychiatry.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Pediatrics\",\n    ar: \"طب الأطفال\",\n    icon: \"assets/icons/pediatrics.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Orthopedic Surgery\",\n    ar: \"جراحة العظام\",\n    icon: \"assets/icons/orthopedic.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Urology Surgery\",\n    ar: \"جراحة المسالك البوليه\",\n    icon: \"assets/icons/urology.png\",\n    isSelected: false,\n  },\n  {\n    en: \"NeuroSurgery & Spine\",\n    ar: \"جراحة المخ والأعصاب والعمود الفقري\",\n    icon: \"assets/icons/neuroSurgery.png\",\n    isSelected: false,\n  },\n  {\n    en: \"General Surgery\",\n    ar: \"جراحة عامه\",\n    icon: \"assets/icons/generalSurgery.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Dental & Dental Procedures\",\n    ar: \"طب الأسنان وجراحة الفك\",\n    icon: \"assets/icons/dental.png\",\n    isSelected: false,\n  },\n  {\n    en: \"Infectious Diseases\",\n    ar: \"الأمراض المعديه\",\n    icon: \"assets/icons/infections.png\",\n    isSelected: false,\n  },\n];\n\nexport default specialities;\n","import { TextField, InputAdornment } from \"@material-ui/core\";\nimport React, { useRef, useImperativeHandle } from \"react\";\n\nfunction Input(props, ref) {\n  let fullWidth;\n  const inputRef = useRef();\n\n  let variant = \"outlined\";\n\n  if (props.notFullWidth) {\n    fullWidth = false;\n  } else {\n    fullWidth = true;\n  }\n\n  if (props.variant) {\n    variant = props.variant;\n  }\n\n  const blur = () => {\n    inputRef.current.blur();\n  };\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  const setValue = (newValue) => {\n    inputRef.current.value = newValue;\n  };\n\n  const getValue = () => {\n    return inputRef.current.value;\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      unfocus: blur,\n      focus: focus,\n      setValue: setValue,\n      getValue: getValue,\n    };\n  });\n\n  return (\n    <TextField\n      inputRef={inputRef}\n      inputProps={{\n        ...props.inputProps,\n      }}\n      onClick={props.onClick}\n      fullWidth={fullWidth}\n      InputProps={{\n        inputProps: props.inputProps,\n        startAdornment: props.icon && (\n          <InputAdornment position=\"start\">{props.icon}</InputAdornment>\n        ),\n\n        endAdornment: props.suffix && (\n          <InputAdornment position=\"end\">{props.suffix}</InputAdornment>\n        ),\n      }}\n      variant={variant}\n      {...props}\n    ></TextField>\n  );\n}\n\nexport default React.forwardRef(Input);\n","import React from \"react\";\nimport classes from \"./Center.module.css\";\n\nfunction Center(props) {\n  return <div className={classes.center}>{props.children}</div>;\n}\n\nexport default Center;\n","import React, { useState, useRef } from \"react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport useHttp from \"../hooks/use-http\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  faIdCard,\n  faKey,\n  faEye,\n  faEyeSlash,\n  faBirthdayCake,\n  faHashtag,\n  faMoneyBill,\n  faPercent,\n  faDollarSign,\n  faCreditCard,\n  faCity,\n  faFlag,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"react-phone-input-2/lib/material.css\";\nimport specialities from \"../data/specialities\";\n\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Grid,\n  Checkbox,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport classes from \"./RegistrationForm.module.css\";\nimport Input from \"./Input\";\nimport Center from \"./Center\";\nimport {\n  AccountCircle,\n  EmailRounded,\n  LocalHospitalRounded,\n} from \"@mui/icons-material\";\nimport { Divider, IconButton, Typography } from \"@mui/material\";\n\nimport { blue, grey } from \"@mui/material/colors\";\n\nvar specialitiesEnglish = [];\nvar specialitiesArabic = [];\nvar selectedLanguages = [];\n\nconst allLanguages = [\n  { language: \"English\", isSelected: false },\n  { language: \"Arabic\", isSelected: false },\n];\n\nconst education = {\n  institutionName: \"\",\n  course: \"\",\n  year: \"\",\n};\n\nconst experience = {\n  hospitalName: \"\",\n  position: \"\",\n  years: \"\",\n};\n\nconst iconColor = \"#42a5f5\";\nconst iconErrorColor = \"#f44336\";\n\nfunction RegistrationForm() {\n  const {\n    isLoading: isSendingOTP,\n    error: otpError,\n    sendRequest: sendOtp,\n  } = useHttp();\n\n  const [gender, setGender] = useState(\"MALE\");\n  const [gradeLevel, setGradeLevel] = useState(\"CONSULTANT\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(\"password\");\n  const [confirmPasswordState, setConfirmPasswordState] = useState(\"password\");\n  const [invalidDiscountPercentage, setInvalidDiscountPercentage] =\n    useState(false);\n\n  const [passwords, setPasswords] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    passwordsMatch: true,\n  });\n  const [discountPercentageDisabled, setDiscountPercentageDisabled] =\n    useState(true);\n  const [selectedSpecialities, setSelectedSpecialities] = useState(\n    specialities.map((spaciality) => {\n      return {\n        en: spaciality.en,\n        ar: spaciality.ar,\n        icon: spaciality.icon,\n        isSelected: spaciality.isSelected,\n      };\n    })\n  );\n\n  const [languages, setLanguages] = useState([\n    { language: \"English\", isSelected: false },\n    { language: \"Arabic\", isSelected: false },\n  ]);\n\n  const [attempt, setAttempt] = useState(1);\n\n  const discountAmountRef = useRef();\n  const discountPercentageRef = useRef();\n  const feeRef = useRef();\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n  };\n  const togglePasswordObscuredHandler = (event) => {\n    if (passwordState === \"password\") {\n      setPasswordState(\"text\");\n    } else {\n      setPasswordState(\"password\");\n    }\n  };\n  const toggleConfirmPasswordObscuredHandler = (event) => {\n    if (confirmPasswordState === \"password\") {\n      setConfirmPasswordState(\"text\");\n    } else {\n      setConfirmPasswordState(\"password\");\n    }\n  };\n\n  const onDiscountPercentageChange = (event) => {\n    if (+event.target.value > 99 || +event.target.value < 0) {\n      setInvalidDiscountPercentage(true);\n      discountPercentageRef.current.setValue(\"0\");\n    } else {\n      if (invalidDiscountPercentage) {\n        setInvalidDiscountPercentage(false);\n      }\n    }\n\n    updateDiscountAmount();\n  };\n\n  const updateDiscountAmount = () => {\n    const discountPercentage = discountPercentageRef.current.getValue();\n\n    const discountAmount =\n      feeRef.current.getValue() * (discountPercentage / 100);\n    discountAmountRef.current.setValue(discountAmount);\n  };\n\n  const onFeeChange = (event) => {\n    if (event.target.value === \"\") {\n      if (!discountPercentageDisabled) {\n        setDiscountPercentageDisabled(true);\n        discountPercentageRef.current.setValue(\"\");\n      }\n    } else {\n      if (discountPercentageDisabled) {\n        setDiscountPercentageDisabled(false);\n      }\n    }\n\n    updateDiscountAmount();\n  };\n\n  const validatePassword = (pass, confirmPass) => {\n    console.log(pass === confirmPass);\n    return pass === confirmPass;\n  };\n\n  return (\n    <React.Fragment>\n      <Center>\n        <form onSubmit={formSubmitHandler} className={classes.form}>\n          <div className={classes.row}>\n            <Input\n              required\n              fullWidth\n              type=\"text\"\n              placeholder=\"Enter your first name\"\n              label=\"First Name\"\n              icon={<AccountCircle sx={{ color: blue[400] }} />}\n            ></Input>\n            <Input\n              required\n              type=\"text\"\n              label=\"Last Name\"\n              placeholder=\"Enter your last name\"\n              icon={<AccountCircle sx={{ color: blue[400] }} />}\n            ></Input>\n          </div>\n          <FormControl>\n            <FormLabel>Gender</FormLabel>\n            <RadioGroup\n              row\n              value={gender}\n              onChange={(event) => {\n                setGender(event.target.value);\n              }}\n              name=\"gender\"\n            >\n              <FormControlLabel\n                label=\"Male\"\n                value=\"MALE\"\n                control={<Radio color=\"primary\" />}\n              />\n              <FormControlLabel\n                label=\"Female\"\n                value=\"FEMALE\"\n                control={<Radio color=\"primary\" />}\n              />\n            </RadioGroup>\n          </FormControl>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <PhoneInput\n              country={\"sa\"}\n              inputProps={{\n                required: true,\n              }}\n              placeholder=\"Enter phone number\"\n              value={phoneNumber}\n              onChange={(number) => {\n                setPhoneNumber(\"+\" + number);\n              }}\n              onlyCountries={[\"ae\", \"pk\", \"sa\", \"kw\", \"bh\", \"gb\", \"us\"]}\n              countryCodeEditable={false}\n              enableSearch={true}\n              inputStyle={{\n                width: \"100%\",\n                height: \"55px\",\n              }}\n            />\n          </div>\n\n          <Input\n            type=\"email\"\n            label=\"Email\"\n            placeholder=\"Enter your email\"\n            icon={<EmailRounded sx={{ color: blue[400] }} />}\n          ></Input>\n          <Input\n            type=\"text\"\n            label=\"Hospital Name\"\n            placeholder=\"Enter the name of your hospital\"\n            icon={<LocalHospitalRounded sx={{ color: blue[400] }} />}\n          ></Input>\n\n          <Input\n            type=\"number\"\n            required\n            label=\"National ID/Iqama\"\n            placeholder=\"Enter your national ID number\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faIdCard}\n                color={iconColor}\n              />\n            }\n          ></Input>\n\n          <Input\n            type={passwordState}\n            required\n            onChange={(event) => {\n              setPasswords((prevState) => {\n                return {\n                  ...prevState,\n                  password: event.target.value,\n                  passwordsMatch: validatePassword(\n                    event.target.value,\n                    prevState.confirmPassword\n                  ),\n                };\n              });\n            }}\n            label=\"Password\"\n            placeholder=\"Enter your password\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faKey}\n                color={iconColor}\n              />\n            }\n            suffix={\n              <IconButton onClick={togglePasswordObscuredHandler}>\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={passwordState === \"password\" ? faEye : faEyeSlash}\n                  color={iconColor}\n                  aria-label=\"toggle password visibility\"\n                  label=\"Password\"\n                />\n              </IconButton>\n            }\n          />\n          <Input\n            onChange={(event) => {\n              setPasswords((prevState) => {\n                return {\n                  ...prevState,\n                  confirmPassword: event.target.value,\n                  passwordsMatch: validatePassword(\n                    prevState.password,\n                    event.target.value\n                  ),\n                };\n              });\n            }}\n            error={!passwords.passwordsMatch}\n            helperText={\n              !passwords.passwordsMatch ? \"Passwords don't match\" : \"\"\n            }\n            type={confirmPasswordState}\n            required\n            label=\"Confirm Password\"\n            placeholder=\"Confirm your password\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faKey}\n                color={iconColor}\n              />\n            }\n            suffix={\n              <IconButton onClick={toggleConfirmPasswordObscuredHandler}>\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={\n                    confirmPasswordState === \"password\" ? faEye : faEyeSlash\n                  }\n                  color={iconColor}\n                />\n              </IconButton>\n            }\n          />\n\n          <Input\n            type=\"date\"\n            required\n            label=\"Date of birth\"\n            onChange={(event) => {\n              console.log(event.target.value);\n            }}\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faBirthdayCake}\n                color={iconColor}\n              />\n            }\n          />\n\n          <Input\n            type=\"text\"\n            required\n            label=\"SCFHS Registration Number\"\n            placeholder=\"Enter SCFHS Number\"\n            onChange={(event) => {\n              console.log(event.target.value);\n            }}\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faHashtag}\n                color={iconColor}\n              />\n            }\n          />\n\n          <FormControl>\n            <FormLabel>Grade Level</FormLabel>\n            <RadioGroup\n              row\n              value={gradeLevel}\n              onChange={(event) => {\n                setGradeLevel(event.target.value);\n              }}\n              name=\"gradeLevel\"\n            >\n              <FormControlLabel\n                label=\"Consultant\"\n                value=\"CONSULTANT\"\n                control={<Radio color=\"primary\" />}\n              />\n              <FormControlLabel\n                label=\"Specialist\"\n                value=\"SPECIALIST\"\n                control={<Radio color=\"primary\" />}\n              />\n            </RadioGroup>\n          </FormControl>\n          <Divider textAlign=\"left\">\n            <Typography fontSize={16} color={grey[700]}>\n              Select your specialities\n            </Typography>\n          </Divider>\n\n          <Grid container spacing={2}>\n            {specialities.map((speciality, index) => {\n              return (\n                <Grid key={speciality.en} item xs={6}>\n                  <FormControlLabel\n                    label={speciality.en}\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={selectedSpecialities[index].isSelected}\n                        onChange={(event) => {\n                          selectedSpecialities[index].isSelected =\n                            event.target.checked;\n                          setSelectedSpecialities((prevSpecialities) => {\n                            return {\n                              ...prevSpecialities,\n                            };\n                          });\n                          if (event.target.checked) {\n                            specialitiesEnglish.push(\n                              selectedSpecialities[index].en\n                            );\n                            specialitiesArabic.push(\n                              selectedSpecialities[index].ar\n                            );\n                          } else {\n                            specialitiesEnglish = specialitiesEnglish.filter(\n                              (specialityEnglish) =>\n                                specialityEnglish !==\n                                selectedSpecialities[index].en\n                            );\n                            specialitiesArabic = specialitiesArabic.filter(\n                              (specialityArabic) =>\n                                specialityArabic !==\n                                selectedSpecialities[index].ar\n                            );\n                          }\n                        }}\n                      />\n                    }\n                  ></FormControlLabel>\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Fee\n            </Typography>\n          </Divider>\n\n          <Input\n            required\n            ref={feeRef}\n            onChange={onFeeChange}\n            fullWidth\n            type=\"number\"\n            placeholder=\"Enter your fee in Saudi Riyals\"\n            label=\"Fee\"\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faMoneyBill}\n                color={iconColor}\n              />\n            }\n          ></Input>\n\n          <div className={classes.row}>\n            <Input\n              fullWidth\n              ref={discountPercentageRef}\n              onChange={onDiscountPercentageChange}\n              error={invalidDiscountPercentage}\n              disabled={discountPercentageDisabled}\n              helperText={\n                invalidDiscountPercentage\n                  ? \"Percentage must be from 0 to 99\"\n                  : \"\"\n              }\n              type=\"number\"\n              inputProps={{ max: 99 }}\n              placeholder=\"Discount %\"\n              label=\"Discount\"\n              icon={\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={faPercent}\n                  color={\n                    !invalidDiscountPercentage ? iconColor : iconErrorColor\n                  }\n                />\n              }\n            ></Input>\n            <Input\n              fullWidth\n              type=\"number\"\n              placeholder=\"Discount amount \"\n              disabled\n              ref={discountAmountRef}\n            ></Input>\n          </div>\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Select your languages\n            </Typography>\n          </Divider>\n\n          <Grid container spacing={2}>\n            {allLanguages.map((language, index) => {\n              return (\n                <Grid key={language.language} item xs={6}>\n                  <FormControlLabel\n                    label={language.language}\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={languages[index].isSelected}\n                        onChange={(event) => {\n                          languages[index].isSelected = event.target.checked;\n                          setLanguages((prevLanguages) => {\n                            return {\n                              ...prevLanguages,\n                            };\n                          });\n                          if (event.target.checked) {\n                            selectedLanguages.push(languages[index].language);\n                          } else {\n                            selectedLanguages = selectedLanguages.filter(\n                              (element) => {\n                                return element !== allLanguages[index].language;\n                              }\n                            );\n                          }\n\n                          console.log(selectedLanguages);\n                        }}\n                      />\n                    }\n                  ></FormControlLabel>\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Education Details\n            </Typography>\n          </Divider>\n          <div className={classes.educationContainer}>\n            <Input\n              fullWidth\n              placeholder=\"Institution Name\"\n              variant=\"standard\"\n              onChange={(event) => {\n                education.institutionName = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              placeholder=\"Course\"\n              variant=\"standard\"\n              onChange={(event) => {\n                education.course = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              type=\"number\"\n              placeholder=\"Year\"\n              variant=\"standard\"\n              onChange={(event) => {\n                education.year = event.target.value;\n              }}\n            />\n          </div>\n\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Experience Details\n            </Typography>\n          </Divider>\n          <div className={classes.educationContainer}>\n            <Input\n              fullWidth\n              placeholder=\"Hospital Name\"\n              variant=\"standard\"\n              onChange={(event) => {\n                experience.hospitalName = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              placeholder=\"Position\"\n              variant=\"standard\"\n              onChange={(event) => {\n                experience.position = event.target.value;\n              }}\n            />\n            <Input\n              fullWidth\n              type=\"number\"\n              placeholder=\"Years\"\n              variant=\"standard\"\n              onChange={(event) => {\n                experience.years = event.target.value;\n              }}\n            />\n          </div>\n          <Divider textAlign=\"left\">\n            {\" \"}\n            <Typography fontSize={16} color={grey[700]}>\n              Payment Details\n            </Typography>\n          </Divider>\n\n          <Input\n            fullWidth\n            placeholder=\"Enter your bank name\"\n            label=\"Bank Name\"\n            required\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faDollarSign}\n                color={iconColor}\n              />\n            }\n          ></Input>\n          <Input\n            fullWidth\n            placeholder=\"Enter your IBAN\"\n            label=\"IBAN\"\n            required\n            icon={\n              <FontAwesomeIcon\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                }}\n                icon={faCreditCard}\n                color={iconColor}\n              />\n            }\n          ></Input>\n          <Divider textAlign=\"left\"></Divider>\n          <div className={classes.row}>\n            <Input\n              fullWidth\n              className={classes.country}\n              label=\"Country\"\n              disabled\n              required\n              icon={\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={faFlag}\n                  color={iconColor}\n                />\n              }\n            ></Input>{\" \"}\n            <Input\n              fullWidth\n              className={classes.city}\n              placeholder=\"Enter your city\"\n              label=\"City\"\n              required\n              icon={\n                <FontAwesomeIcon\n                  style={{\n                    width: \"25px\",\n                    height: \"25px\",\n                  }}\n                  icon={faCity}\n                  color={iconColor}\n                />\n              }\n            ></Input>\n          </div>\n\n          <div\n            style={{\n              height: \"30px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {\" \"}\n            {isSendingOTP && <CircularProgress />}{\" \"}\n            {otpError && <div>{otpError}</div>}\n          </div>\n\n          <div className={classes.button}>\n            <Button\n              onClick={() => {\n                sendOtp(\n                  \"auth/sendOTP\",\n                  \"POST\",\n                  null,\n                  JSON.stringify({\n                    mobileNumber: \"+923499219314\",\n                    attempt: attempt,\n                    recoverPassword: \"false\",\n\n                    src: \"DOCTORS_APP\",\n                  })\n                );\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"button\"\n            >\n              Send OTP\n            </Button>\n          </div>\n        </form>\n      </Center>\n    </React.Fragment>\n  );\n}\n\nexport default RegistrationForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { blue } from \"@mui/material/colors\";\n\nconst theme = createTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <RegistrationForm></RegistrationForm>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"overlayscrollbars/css/OverlayScrollbars.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__3X3H2\",\"button\":\"RegistrationForm_button__28eTj\",\"row\":\"RegistrationForm_row__1LYYd\",\"specialitiesInput\":\"RegistrationForm_specialitiesInput__LNNJm\",\"educationContainer\":\"RegistrationForm_educationContainer__3vQjn\",\"country\":\"RegistrationForm_country__JEo-W\",\"city\":\"RegistrationForm_city__3vJt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Center_center__1bYle\"};"],"sourceRoot":""}